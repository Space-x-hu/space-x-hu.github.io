<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hill加密系统(Python)</title>
      <link href="/2024/03/22/null/"/>
      <url>/2024/03/22/null/</url>
      
        <content type="html"><![CDATA[<h1 id="Hill加密系统-Python"><a href="#Hill加密系统-Python" class="headerlink" title="Hill加密系统(Python)"></a>Hill加密系统(Python)</h1><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>​最近在学习数据安全时，上机课的任务是完成希尔加密算法。因为最近我写Python比较多，所以就想用Python来实现。一开始什么思绪也没有，毕竟我们大数据专业也没有学过密码学。</p><p>​就在网上找相关的资料，找了好久才理解希尔加密算法。就花了几天课余时间自己写了一个简单的希尔加密系统。</p><h3 id="先来了解一下希尔加密算法"><a href="#先来了解一下希尔加密算法" class="headerlink" title="先来了解一下希尔加密算法"></a>先来了解一下希尔加密算法</h3><p>加密的基本流程：希尔密码（Hill）使用每个字母在字母表中的顺序作为其对应的数字，即 A&#x3D;0，B&#x3D;1，C&#x3D;2 等，然后将明文转化为 n 维向量，跟一个 n × n 的矩阵相乘，再将得出的结果模 26。注意用作加密的矩阵（即密匙）在 Zn26Z26n 必须是可逆的，否则就不可能解码。只有矩阵的行列式和 26 互质，才是可逆的。</p><h3 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h3><p>定义一个字母表：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">alphabet = &#123;<span class="number">0</span>: <span class="string">&#x27;a&#x27;</span>, <span class="number">1</span>: <span class="string">&#x27;b&#x27;</span>, <span class="number">2</span>: <span class="string">&#x27;c&#x27;</span>, <span class="number">3</span>: <span class="string">&#x27;d&#x27;</span>, <span class="number">4</span>: <span class="string">&#x27;e&#x27;</span>, <span class="number">5</span>: <span class="string">&#x27;f&#x27;</span>, <span class="number">6</span>: <span class="string">&#x27;g&#x27;</span>, <span class="number">7</span>: <span class="string">&#x27;h&#x27;</span>, <span class="number">8</span>: <span class="string">&#x27;i&#x27;</span>, <span class="number">9</span>: <span class="string">&#x27;j&#x27;</span>, <span class="number">10</span>: <span class="string">&#x27;k&#x27;</span>, <span class="number">11</span>: <span class="string">&#x27;l&#x27;</span>,</span><br><span class="line">            <span class="number">12</span>: <span class="string">&#x27;m&#x27;</span>, <span class="number">13</span>: <span class="string">&#x27;n&#x27;</span>, <span class="number">14</span>: <span class="string">&#x27;o&#x27;</span>, <span class="number">15</span>: <span class="string">&#x27;p&#x27;</span>, <span class="number">16</span>: <span class="string">&#x27;q&#x27;</span>, <span class="number">17</span>: <span class="string">&#x27;r&#x27;</span>, <span class="number">18</span>: <span class="string">&#x27;s&#x27;</span>, <span class="number">19</span>: <span class="string">&#x27;t&#x27;</span>, <span class="number">20</span>: <span class="string">&#x27;u&#x27;</span>, <span class="number">21</span>: <span class="string">&#x27;v&#x27;</span>, <span class="number">22</span>: <span class="string">&#x27;w&#x27;</span>,</span><br><span class="line">            <span class="number">23</span>: <span class="string">&#x27;x&#x27;</span>, <span class="number">24</span>: <span class="string">&#x27;y&#x27;</span>, <span class="number">25</span>: <span class="string">&#x27;z&#x27;</span>&#125;</span><br></pre></td></tr></table></figure><p>将输入的明文转换为一个N为维向量（这里笔者只实现了加密三位字母的字符串）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">text_to_list</span>(<span class="params">text</span>):     <span class="comment"># 明文转数字列表</span></span><br><span class="line">    text_list = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> text:</span><br><span class="line">        <span class="keyword">for</span> key,value <span class="keyword">in</span> alphabet.items():</span><br><span class="line">            <span class="keyword">if</span> value == i:</span><br><span class="line">                text_list.append(key)</span><br><span class="line">    <span class="comment"># print(&quot;明文转换数字完成&quot;)</span></span><br><span class="line">    <span class="keyword">return</span> text_list</span><br><span class="line">    <span class="comment"># print(text_list)</span></span><br></pre></td></tr></table></figure><p>N维向量与密钥矩阵相乘：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">text_list = text_to_list(text)</span><br><span class="line">text_array = numpy.array(text_list)  <span class="comment"># 列表构建矩阵</span></span><br><span class="line">ciphertext = text_array @ key_list  <span class="comment"># 加密相乘</span></span><br></pre></td></tr></table></figure><p>相乘结果矩阵转换为字符串：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">ciphertext_to_text</span>(<span class="params">cirphertext</span>):        <span class="comment"># 数字密文转换为字符串密文</span></span><br><span class="line">    cirphertext = cirphertext % <span class="number">26</span></span><br><span class="line">    <span class="comment"># print(f&quot;取余后的矩阵&#123;cirphertext&#125;&quot;)</span></span><br><span class="line">    key_text = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> element <span class="keyword">in</span> cirphertext:</span><br><span class="line">        key_text += alphabet[<span class="built_in">int</span>(element)]</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;转换为密文:<span class="subst">&#123;key_text&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> key_text</span><br></pre></td></tr></table></figure><p>到这里，已经完成了加密。其中需要强调的是，这里笔者使用的是3*3阶加密矩阵，加密矩阵要满足以下条件：</p><ol><li><strong>可逆性</strong>：用作加密的密钥矩阵必须是可逆的，否则无法解码。只有矩阵的行列式与 26 互质，才是可逆的。</li><li><strong>行列式与 26 互质</strong>：密钥矩阵的行列式必须与 26 互质，以确保可逆性。</li><li><strong>合适的矩阵大小</strong>：密钥矩阵的大小必须适合明文分组的长度。</li></ol><p>在笔者的代码中，使用的密钥是一个3*3阶的矩阵：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">key_list = numpy.array([[<span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>], [<span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>], [<span class="number">2</span>, <span class="number">1</span>, <span class="number">2</span>]])    </span><br></pre></td></tr></table></figure><p>下面是运行的截图：</p><p><img src="/2024/03/22/null/hero-jason-blog\source\pic\image-20240322152518919.png"></p><h3 id="完整代码："><a href="#完整代码：" class="headerlink" title="完整代码："></a>完整代码：</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义一个转换字母表</span></span><br><span class="line">alphabet = &#123;<span class="number">0</span>: <span class="string">&#x27;a&#x27;</span>, <span class="number">1</span>: <span class="string">&#x27;b&#x27;</span>, <span class="number">2</span>: <span class="string">&#x27;c&#x27;</span>, <span class="number">3</span>: <span class="string">&#x27;d&#x27;</span>, <span class="number">4</span>: <span class="string">&#x27;e&#x27;</span>, <span class="number">5</span>: <span class="string">&#x27;f&#x27;</span>, <span class="number">6</span>: <span class="string">&#x27;g&#x27;</span>, <span class="number">7</span>: <span class="string">&#x27;h&#x27;</span>, <span class="number">8</span>: <span class="string">&#x27;i&#x27;</span>, <span class="number">9</span>: <span class="string">&#x27;j&#x27;</span>, <span class="number">10</span>: <span class="string">&#x27;k&#x27;</span>, <span class="number">11</span>: <span class="string">&#x27;l&#x27;</span>,</span><br><span class="line">            <span class="number">12</span>: <span class="string">&#x27;m&#x27;</span>, <span class="number">13</span>: <span class="string">&#x27;n&#x27;</span>, <span class="number">14</span>: <span class="string">&#x27;o&#x27;</span>, <span class="number">15</span>: <span class="string">&#x27;p&#x27;</span>, <span class="number">16</span>: <span class="string">&#x27;q&#x27;</span>, <span class="number">17</span>: <span class="string">&#x27;r&#x27;</span>, <span class="number">18</span>: <span class="string">&#x27;s&#x27;</span>, <span class="number">19</span>: <span class="string">&#x27;t&#x27;</span>, <span class="number">20</span>: <span class="string">&#x27;u&#x27;</span>, <span class="number">21</span>: <span class="string">&#x27;v&#x27;</span>, <span class="number">22</span>: <span class="string">&#x27;w&#x27;</span>,</span><br><span class="line">            <span class="number">23</span>: <span class="string">&#x27;x&#x27;</span>, <span class="number">24</span>: <span class="string">&#x27;y&#x27;</span>, <span class="number">25</span>: <span class="string">&#x27;z&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line">key_list = numpy.array([[<span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>], [<span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>], [<span class="number">2</span>, <span class="number">1</span>, <span class="number">2</span>]])        <span class="comment"># 密钥矩阵</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">text_to_list</span>(<span class="params">text</span>):     <span class="comment"># 明文转数字列表</span></span><br><span class="line">    text_list = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> text:</span><br><span class="line">        <span class="keyword">for</span> key,value <span class="keyword">in</span> alphabet.items():</span><br><span class="line">            <span class="keyword">if</span> value == i:</span><br><span class="line">                text_list.append(key)</span><br><span class="line">    <span class="comment"># print(&quot;明文转换数字完成&quot;)</span></span><br><span class="line">    <span class="keyword">return</span> text_list</span><br><span class="line">    <span class="comment"># print(text_list)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">ciphertext_to_text</span>(<span class="params">cirphertext</span>):        <span class="comment"># 数字密文转换为字符串密文</span></span><br><span class="line">    cirphertext = cirphertext % <span class="number">26</span></span><br><span class="line">    <span class="comment"># print(f&quot;取余后的矩阵&#123;cirphertext&#125;&quot;)</span></span><br><span class="line">    key_text = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> element <span class="keyword">in</span> cirphertext:</span><br><span class="line">        key_text += alphabet[<span class="built_in">int</span>(element)]</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;转换为密文:<span class="subst">&#123;key_text&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> key_text</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">decrypt</span>(<span class="params">ciphertext, key</span>):       <span class="comment"># 解密函数 传入参数分别为：带解密的字符串和加密密钥</span></span><br><span class="line">    <span class="comment"># 计算密钥矩阵的逆矩阵</span></span><br><span class="line">    inv_key = numpy.linalg.inv(key)</span><br><span class="line">    <span class="comment"># 字符串转数字列表</span></span><br><span class="line">    num_list = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> ciphertext:</span><br><span class="line">        <span class="keyword">for</span> key, value <span class="keyword">in</span> alphabet.items():</span><br><span class="line">            <span class="keyword">if</span> value == i:</span><br><span class="line">                num_list.append(key)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 将密文矩阵与逆矩阵相乘</span></span><br><span class="line">    decrypted = numpy.<span class="built_in">round</span>(num_list @ inv_key).astype(<span class="built_in">int</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 将数字转换回字母</span></span><br><span class="line">    decrypted_text = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> element <span class="keyword">in</span> decrypted:</span><br><span class="line">        element = (element + <span class="number">2600</span>) % <span class="number">26</span>     <span class="comment"># +2600是为了解决和解密矩阵相乘后有负数的情况</span></span><br><span class="line">        decrypted_text += alphabet[<span class="built_in">int</span>(element)]</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;解密结果：<span class="subst">&#123;decrypted_text&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> decrypted_text</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    <span class="keyword">while</span>( <span class="literal">True</span> ):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;-------------------------------------Hill加密系统----------------------------------------------&quot;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;1.加密&quot;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;2.解密&quot;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;3.退出&quot;</span>)</span><br><span class="line">        choose = <span class="built_in">input</span>(<span class="string">&quot;请输入：&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> choose == <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">            text = <span class="built_in">input</span>(<span class="string">&quot;输入待加密的三位小写字母字符串：&quot;</span>)</span><br><span class="line">            text_list = []</span><br><span class="line">            text_list = text_to_list(text)</span><br><span class="line">            text_array = numpy.array(text_list)  <span class="comment"># 列表构建矩阵</span></span><br><span class="line">            ciphertext = text_array @ key_list  <span class="comment"># 加密相乘</span></span><br><span class="line">            <span class="comment"># print(f&quot;相乘后的矩阵：&#123;ciphertext&#125;&quot;)</span></span><br><span class="line">            key_text = ciphertext_to_text(ciphertext)</span><br><span class="line">        <span class="keyword">elif</span> choose == <span class="string">&#x27;2&#x27;</span>:</span><br><span class="line">            key_text = <span class="built_in">input</span>(<span class="string">&quot;输入待解密的三位小写字母密文：&quot;</span>)</span><br><span class="line">            decrypt(key_text, key_list)      <span class="comment"># 解密</span></span><br><span class="line">        <span class="keyword">elif</span> choose == <span class="string">&#x27;3&#x27;</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;感谢使用，期待下次使用！&quot;</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;---------------------------------------非法输入！----------------------------------------------&quot;</span>)</span><br></pre></td></tr></table></figure><p>最后，感谢观看！</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>我的第一篇博客</title>
      <link href="/2023/12/23/index/"/>
      <url>/2023/12/23/index/</url>
      
        <content type="html"><![CDATA[<p>欢迎大家来到我的博客，我是Hu。如你所见，这是我的第一篇个人博客（除去HelloWorld），不知道若干年后当我成为一个资深程序员的时候看到这篇文章会有何感想。</p><h2 id="Hexo服务启动"><a href="#Hexo服务启动" class="headerlink" title="Hexo服务启动"></a>Hexo服务启动</h2><h3 id="清除缓存文件-db-json-和已生成的静态文件-public"><a href="#清除缓存文件-db-json-和已生成的静态文件-public" class="headerlink" title="清除缓存文件 db.json 和已生成的静态文件 public"></a>清除缓存文件 db.json 和已生成的静态文件 public</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br></pre></td></tr></table></figure><h3 id="生成网站静态文件到默认设置的-public-文件夹。"><a href="#生成网站静态文件到默认设置的-public-文件夹。" class="headerlink" title="生成网站静态文件到默认设置的 public 文件夹。"></a>生成网站静态文件到默认设置的 public 文件夹。</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g</span><br></pre></td></tr></table></figure><h3 id="启动本地服务器，用于预览主题。默认地址：-http-localhost-4000"><a href="#启动本地服务器，用于预览主题。默认地址：-http-localhost-4000" class="headerlink" title="启动本地服务器，用于预览主题。默认地址： http://localhost:4000/"></a>启动本地服务器，用于预览主题。默认地址： <a href="http://localhost:4000/">http://localhost:4000/</a></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo s</span><br></pre></td></tr></table></figure><h3 id="部署到Github服务器"><a href="#部署到Github服务器" class="headerlink" title="部署到Github服务器"></a>部署到Github服务器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo d</span><br></pre></td></tr></table></figure><p>上面就是一些最基本的hexo命令了。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 小白 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/12/05/index/"/>
      <url>/2023/12/05/index/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
